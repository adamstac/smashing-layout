@import "compass/utilities";

// Configuration
$smashing-direction: right !default;
$smashing-max-width: 1200px !default;
$smashing-min-width: 900px !default;
$smashing-support-ie6: false !default;

// Layout logic variables
$smashing-divine-proportion: $smashing-min-width / 1.62;
$smashing-width: 95%;
$smashing-sidebar-width: floor($smashing-min-width - $smashing-divine-proportion);
$smashing-negative-sidebar-width: -(ceil($smashing-sidebar-width));

@mixin smashing-layout($smashing-direction) {
  @include smashing-width;
  @include smashing-padding($smashing-direction);
  @include smashing-columns($smashing-direction); }

// Sets a div's width to behave like the width of +smashing-layout
// Assumes 2 inner wrapping div's .max-width and .min-width
@mixin smashing-width {
  width: 100%;
  @if $smashing-support-ie6 {
    .max-width {
      margin: 0 auto;
      max-width: $smashing-max-width;
      width: $smashing-width; }
    .min-width {
      @include pie-clearfix;
      margin: 0 auto;
      min-width: $smashing-min-width;
      width: $smashing-width; } }
  @else {
    .max-width {
      @include pie-clearfix;
      margin: 0 auto;
      min-width: $smashing-min-width;
      max-width: $smashing-max-width;
      width: $smashing-width; } } }

// Used only in +smashing-layout
@mixin smashing-padding($smashing-direction) {
  .padding {
    @include pie-clearfix;
    padding-#{$smashing-direction}: $smashing-sidebar-width;
    width: auto; } }

// Used only in +smashing-layout
@mixin smashing-columns($smashing-direction) {
  .column {
    @if $smashing-direction == right {
      float: left; }
    @else if $smashing-direction == left {
      float: right; }
    position: relative;
    &.primary {
      width: 100%; }
    &.secondary {
      margin-#{$smashing-direction}: $smashing-negative-sidebar-width;
      width: $smashing-sidebar-width; } } }
